Иерархии классов Reader и Writer предназначены для работы с символьными потоками, в отличие от InputStream и OutputStream, которые функционируют с байтовыми потоками. 

Основные причины для использования Reader и Writer включают следующие:

-Работа с текстовыми данными: Классы Reader и Writer предлагают удобные методы для обработки текстовых данных и поддерживают кодировки символов, что позволяет правильно интерпретировать различные языки и символы.

-Упрощение работы с символами: Эти классы предоставляют методы для чтения и записи символов, строк и массивов символов, что делает их более подходящими для текстовой обработки по сравнению с байтовыми потоками.

-Удобство использования: Методы Reader и Writer более интуитивны для работы с текстом, поскольку они автоматически управляют преобразованием между символами и байтами.
